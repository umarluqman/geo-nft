/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNfts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "fivePercentOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b8d806100696000396000f3fe6080604052600436106100705760003560e01c8063c23b139e1161004e578063c23b139e146100e7578063d6077fbf14610103578063f064c32e14610140578063fd4f66c11461016b57610070565b80630f08efe014610075578063128ae712146100a057806358eb2df5146100cb575b600080fd5b34801561008157600080fd5b5061008a6101a8565b60405161009791906116d3565b60405180910390f35b3480156100ac57600080fd5b506100b56104cb565b6040516100c291906116d3565b60405180910390f35b6100e560048036038101906100e091906113c3565b610865565b005b61010160048036038101906100fc9190611387565b610bcf565b005b34801561010f57600080fd5b5061012a60048036038101906101259190611412565b610e8e565b6040516101379190611795565b60405180910390f35b34801561014c57600080fd5b50610155610ea0565b60405161016291906116d3565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190611412565b61123a565b60405161019f9190611795565b60405180910390f35b606060006101b660016112b8565b905060006101c460026112b8565b826101cf91906118db565b90506000808267ffffffffffffffff811115610214577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561024d57816020015b61023a6112dc565b8152602001906001900390816102325790505b50905060005b848110156104c057600073ffffffffffffffffffffffffffffffffffffffff166004600060018461028491906117fa565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104ad576000600460006001846102e591906117fa565b81526020019081526020016000206000015490506000600460008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110610490577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856104a891906117fa565b945050505b80806104b890611969565b915050610253565b508094505050505090565b606060006104d960016112b8565b905060008060005b83811015610582573373ffffffffffffffffffffffffffffffffffffffff166004600060018461051191906117fa565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561056f5760018361056c91906117fa565b92505b808061057a90611969565b9150506104e1565b5060008267ffffffffffffffff8111156105c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105fe57816020015b6105eb6112dc565b8152602001906001900390816105e35790505b50905060005b8481101561085a573373ffffffffffffffffffffffffffffffffffffffff166004600060018461063491906117fa565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561084757600060018261069191906117fa565b90506000600460008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505084868151811061082a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018561084291906117fa565b945050505b808061085290611969565b915050610604565b508094505050505090565b600260005414156108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a290611755565b60405180910390fd5b6002600081905550600081116108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611775565b60405180910390fd5b6108ff8161123a565b3414610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093790611715565b60405180910390fd5b61094a60016112c6565b600061095660016112b8565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600460008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610b3793929190611657565b600060405180830381600087803b158015610b5157600080fd5b505af1158015610b65573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827f045dfa01dcba2b36aba1d3dc4a874f4b0c5d2fbeb8d2c4b34a7d88c8d8f929d1336000876000604051610bb9949392919061168e565b60405180910390a4506001600081905550505050565b60026000541415610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611755565b60405180910390fd5b6002600081905550600060046000838152602001908152602001600020600501549050600060046000848152602001908152602001600020600201549050813414610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c906116f5565b60405180910390fd5b6004600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610d11573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610d4f93929190611657565b600060405180830381600087803b158015610d6957600080fd5b505af1158015610d7d573d6000803e3d6000fd5b50505050336004600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016004600085815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610e0f60026112c6565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc610e548461123a565b9081150290604051600060405180830381858888f19350505050158015610e7f573d6000803e3d6000fd5b50505060016000819055505050565b6000610e998261123a565b9050919050565b60606000610eae60016112b8565b905060008060005b83811015610f57573373ffffffffffffffffffffffffffffffffffffffff1660046000600184610ee691906117fa565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f4457600183610f4191906117fa565b92505b8080610f4f90611969565b915050610eb6565b5060008267ffffffffffffffff811115610f9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610fd357816020015b610fc06112dc565b815260200190600190039081610fb85790505b50905060005b8481101561122f573373ffffffffffffffffffffffffffffffffffffffff166004600060018461100991906117fa565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561121c57600060018261106691906117fa565b90506000600460008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106111ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018561121791906117fa565b945050505b808061122790611969565b915050610fd9565b508094505050505090565b600081612710808461124c9190611850565b6112569190611881565b14611296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128d90611735565b60405180910390fd5b6127106101f4836112a79190611881565b6112b19190611850565b9050919050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b60008135905061136c81611b29565b92915050565b60008135905061138181611b40565b92915050565b6000806040838503121561139a57600080fd5b60006113a88582860161135d565b92505060206113b985828601611372565b9150509250929050565b6000806000606084860312156113d857600080fd5b60006113e68682870161135d565b93505060206113f786828701611372565b925050604061140886828701611372565b9150509250925092565b60006020828403121561142457600080fd5b600061143284828501611372565b91505092915050565b600061144783836115ab565b60e08301905092915050565b61145c81611921565b82525050565b61146b8161190f565b82525050565b61147a8161190f565b82525050565b600061148b826117c0565b61149581856117d8565b93506114a0836117b0565b8060005b838110156114d15781516114b8888261143b565b97506114c3836117cb565b9250506001810190506114a4565b5085935050505092915050565b6114e781611933565b82525050565b6114f681611933565b82525050565b60006115096040836117e9565b915061151482611a10565b604082019050919050565b600061152c6032836117e9565b915061153782611a5f565b604082019050919050565b600061154f6012836117e9565b915061155a82611aae565b602082019050919050565b6000611572601f836117e9565b915061157d82611ad7565b602082019050919050565b6000611595601c836117e9565b91506115a082611b00565b602082019050919050565b60e0820160008201516115c16000850182611639565b5060208201516115d46020850182611462565b5060408201516115e76040850182611639565b5060608201516115fa6060850182611453565b50608082015161160d6080850182611453565b5060a082015161162060a0850182611639565b5060c082015161163360c08501826114de565b50505050565b6116428161195f565b82525050565b6116518161195f565b82525050565b600060608201905061166c6000830186611471565b6116796020830185611471565b6116866040830184611648565b949350505050565b60006080820190506116a36000830187611471565b6116b06020830186611471565b6116bd6040830185611648565b6116ca60608301846114ed565b95945050505050565b600060208201905081810360008301526116ed8184611480565b905092915050565b6000602082019050818103600083015261170e816114fc565b9050919050565b6000602082019050818103600083015261172e8161151f565b9050919050565b6000602082019050818103600083015261174e81611542565b9050919050565b6000602082019050818103600083015261176e81611565565b9050919050565b6000602082019050818103600083015261178e81611588565b9050919050565b60006020820190506117aa6000830184611648565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006118058261195f565b91506118108361195f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611845576118446119b2565b5b828201905092915050565b600061185b8261195f565b91506118668361195f565b925082611876576118756119e1565b5b828204905092915050565b600061188c8261195f565b91506118978361195f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118d0576118cf6119b2565b5b828202905092915050565b60006118e68261195f565b91506118f18361195f565b925082821015611904576119036119b2565b5b828203905092915050565b600061191a8261193f565b9050919050565b600061192c8261193f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006119748261195f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156119a7576119a66119b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b7f5072696365206d75737420626520657175616c20746f2074686520352070657260008201527f63656e74206f66207468652070726963652e0000000000000000000000000000602082015250565b7f56616c756520697320746f6f20736d616c6c0000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b611b328161190f565b8114611b3d57600080fd5b50565b611b498161195f565b8114611b5457600080fd5b5056fea264697066735822122058725235ce903695aa1baddce837bdba94a89fab1c4de354f57c7757ce12d6bf64736f6c63430008040033";

export class Marketplace__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
