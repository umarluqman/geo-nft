/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketItemCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "createMarketSale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNfts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "fivePercentOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600055600380546001600160a01b03191633179055610de8806100376000396000f3fe6080604052600436106100705760003560e01c8063c23b139e1161004e578063c23b139e146100ca578063d6077fbf146100dd578063f064c32e1461010a578063fd4f66c11461011f57610070565b80630f08efe014610075578063128ae712146100a057806358eb2df5146100b5575b600080fd5b34801561008157600080fd5b5061008a61013f565b6040516100979190610c02565b60405180910390f35b3480156100ac57600080fd5b5061008a610297565b6100c86100c3366004610b6b565b610416565b005b6100c86100d8366004610b42565b610679565b3480156100e957600080fd5b506100fd6100f8366004610b9d565b61083e565b6040516100979190610da9565b34801561011657600080fd5b5061008a610851565b34801561012b57600080fd5b506100fd61013a366004610b9d565b6109ce565b6060600061014d6001610a06565b9050600061015b6002610a06565b820390506000808267ffffffffffffffff8111801561017957600080fd5b506040519080825280602002602001820160405280156101b357816020015b6101a0610aef565b8152602001906001900390816101985790505b50905060005b8481101561028e5760018101600090815260046020819052604090912001546001600160a01b031661028657600180820160009081526004602081815260408084205480855293819020815160e08101835281548152958101546001600160a01b039081169387019390935260028101549186019190915260038101548216606086015291820154166080840152600581015460a0840152600681015460ff16151560c084015284519192909185908790811061027257fe5b602002602001018190525060018501945050505b6001016101b9565b50935050505090565b606060006102a56001610a06565b905060008060005b838110156102eb5760018101600090815260046020819052604090912001546001600160a01b03163314156102e3576001830192505b6001016102ad565b5060008267ffffffffffffffff8111801561030557600080fd5b5060405190808252806020026020018201604052801561033f57816020015b61032c610aef565b8152602001906001900390816103245790505b50905060005b8481101561028e5760018101600090815260046020819052604090912001546001600160a01b031633141561040e576001808201600081815260046020818152604092839020835160e08101855281548152958101546001600160a01b039081169287019290925260028101549386019390935260038301548116606086015290820154166080840152600581015460a0840152600681015460ff16151560c08401528451919290918590879081106103fa57fe5b602002602001018190525060018501945050505b600101610345565b6002600054141561046e576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600055806104995760405162461bcd60e51b815260040161049090610d72565b60405180910390fd5b6104a2816109ce565b34146104c05760405162461bcd60e51b815260040161049090610cf4565b6104ca6001610a0a565b60006104d66001610a06565b6040805160e0810182528281526001600160a01b038088166020808401918252838501898152336060860181815260006080880181815260a089018d815260c08a018381528c84526004808952938c90209a518b55975160018b018054918b166001600160a01b0319928316179055955160028b0155925160038a018054918a169187169190911790555190880180549190971693169290921790945551600585015590516006909301805493151560ff19909416939093179092558251808401909352600c83526b66726f6d206164647265737360a01b918301919091529192506105c191610a13565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906105f190339030908890600401610bde565b600060405180830381600087803b15801561060b57600080fd5b505af115801561061f573d6000803e3d6000fd5b5050505082846001600160a01b0316827f045dfa01dcba2b36aba1d3dc4a874f4b0c5d2fbeb8d2c4b34a7d88c8d8f929d13360008760006040516106669493929190610bb5565b60405180910390a4505060016000555050565b600260005414156106d1576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026000818155828152600460205260409020600581015491015434821461070b5760405162461bcd60e51b815260040161049090610c96565b6000838152600460205260408082206003015490516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015610753573d6000803e3d6000fd5b506040516323b872dd60e01b81526001600160a01b038516906323b872dd9061078490309033908690600401610bde565b600060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050600084815260046020819052604090912090810180546001600160a01b03191633179055600601805460ff19166001179055506107f26002610a0a565b6003546001600160a01b03166108fc61080a846109ce565b6040518115909202916000818181858888f19350505050158015610832573d6000803e3d6000fd5b50506001600055505050565b6000610849826109ce565b90505b919050565b6060600061085f6001610a06565b905060008060005b838110156108a457600181016000908152600460205260409020600301546001600160a01b031633141561089c576001830192505b600101610867565b5060008267ffffffffffffffff811180156108be57600080fd5b506040519080825280602002602001820160405280156108f857816020015b6108e5610aef565b8152602001906001900390816108dd5790505b50905060005b8481101561028e57600181016000908152600460205260409020600301546001600160a01b03163314156109c6576001808201600081815260046020818152604092839020835160e08101855281548152958101546001600160a01b039081169287019290925260028101549386019390935260038301548116606086015290820154166080840152600581015460a0840152600681015460ff16151560c08401528451919290918590879081106109b257fe5b602002602001018190525060018501945050505b6001016108fe565b600081612710810461271002146109f75760405162461bcd60e51b815260040161049090610d46565b6127106101f483020492915050565b5490565b80546001019055565b610aca82826040516024018080602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015610a67578181015183820152602001610a4f565b50505050905090810190601f168015610a945780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790529350610ace92505050565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b80356001600160a01b038116811461084c57600080fd5b60008060408385031215610b54578182fd5b610b5d83610b2b565b946020939093013593505050565b600080600060608486031215610b7f578081fd5b610b8884610b2b565b95602085013595506040909401359392505050565b600060208284031215610bae578081fd5b5035919050565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b602080825282518282018190526000919060409081850190868401855b82811015610c8957815180518552868101516001600160a01b039081168887015286820151878701526060808301518216908701526080808301519091169086015260a0808201519086015260c09081015115159085015260e09093019290850190600101610c1f565b5091979650505050505050565b602080825260409082018190527f506c65617365207375626d6974207468652061736b696e672070726963652069908201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365606082015260800190565b60208082526032908201527f5072696365206d75737420626520657175616c20746f2074686520352070657260408201527131b2b73a1037b3103a343290383934b1b29760711b606082015260800190565b60208082526012908201527115985b1d59481a5cc81d1bdbc81cdb585b1b60721b604082015260600190565b6020808252601c908201527f5072696365206d757374206265206174206c6561737420312077656900000000604082015260600190565b9081526020019056fea26469706673582212204f1977e4e4c315724f2e6afbd576fb73a0c066ebbd76768af31e38fc591e76c364736f6c63430007060033";

export class Marketplace__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
