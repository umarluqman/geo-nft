/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTDescriptorTest,
  NFTDescriptorTestInterface,
} from "../NFTDescriptorTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addressToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "uTokenAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "uTokenSymbol",
            type: "string",
          },
        ],
        internalType: "struct NFTDescriptor.URIParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "constructTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "uTokenAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "uTokenSymbol",
            type: "string",
          },
        ],
        internalType: "struct NFTDescriptor.URIParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "poolAddress",
        type: "string",
      },
    ],
    name: "isRare",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "toColorHex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a82806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632a1002921461005c5780633650b4cf146100855780635e57966d14610098578063e3b9f0b4146100ab578063edb5a3e6146100cb575b600080fd5b61006f61006a366004610b58565b6100de565b60405161007c9190611916565b60405180910390f35b61006f610093366004610abc565b610174565b61006f6100a6366004610aa2565b610192565b6100be6100b9366004610c3a565b61019d565b60405161007c919061190b565b61006f6100d9366004610b90565b6101a9565b60405163070ec04f60e11b815260609073__$2759669c60850940da18034c6fe7a7457b$";

export class NFTDescriptorTest__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: NFTDescriptorTestLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      NFTDescriptorTest__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: NFTDescriptorTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2759669c60850940da18034c6fe7a7457b\\$__", "g"),
      linkLibraryAddresses["contracts/GenerativeNFT.sol:NFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTDescriptorTest> {
    return super.deploy(overrides || {}) as Promise<NFTDescriptorTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTDescriptorTest {
    return super.attach(address) as NFTDescriptorTest;
  }
  connect(signer: Signer): NFTDescriptorTest__factory {
    return super.connect(signer) as NFTDescriptorTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDescriptorTestInterface {
    return new utils.Interface(_abi) as NFTDescriptorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDescriptorTest {
    return new Contract(address, _abi, signerOrProvider) as NFTDescriptorTest;
  }
}

export interface NFTDescriptorTestLibraryAddresses {
  ["contracts/GenerativeNFT.sol:NFTDescriptor"]: string;
}
