/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTDescriptorTest,
  NFTDescriptorTestInterface,
} from "../NFTDescriptorTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addressToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct NFTDescriptor.URIParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "constructTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct NFTDescriptor.URIParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "poolAddress",
        type: "string",
      },
    ],
    name: "isRare",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "toColorHex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611af5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633650b4cf1461005c5780635e57966d14610085578063652435f514610098578063c9288b06146100ab578063e3b9f0b4146100be575b600080fd5b61006f61006a366004610ab4565b6100de565b60405161007c9190611936565b60405180910390f35b61006f610093366004610a9a565b6100fc565b61006f6100a6366004610b88565b61010f565b61006f6100b9366004610b50565b61011a565b6100d16100cc366004610c4d565b6101a8565b60405161007c919061192b565b60606100f3836001600160a01b0316836101b4565b90505b92915050565b606061010782610259565b90505b919050565b60606101078261026f565b60405163070ec04f60e11b815260609073__$2759669c60850940da18034c6fe7a7457b$__90630e1d809e90610154908590600401611969565b60006040518083038186803b15801561016c57600080fd5b505af4158015610180573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101079190810190610add565b60006100f38383610345565b60606101dc604051806040016040528060048152602001636261736560e01b8152508461034d565b6102116040518060400160405280601081526020016f2862617365203e3e206f66667365742960801b8152508385901c61034d565b61024c604051806040016040528060038152602001620d0caf60eb1b81525061024760038587901c6103ff90919063ffffffff16565b6104b9565b6100f383831c60036103ff565b60606101076001600160a01b03831660146105c6565b606060006040518060e0016040528084600001518152602001846020015181526020018460400151815260200184606001518152602001846080015181526020016102ee856040015186606001516040516020016102ce929190610e55565b6040516020818303038152906040528051906020012060001c60886101b4565b815260200161033185604001518660600151604051602001610311929190610e55565b6040516020818303038152906040528051906020012060001c60006101b4565b9052905061033e81610725565b9392505050565b600092915050565b6103fb82826040516024018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610398578181015183820152602001610380565b50505050905090810190601f1680156103c55780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052935061077392505050565b5050565b606060008260020267ffffffffffffffff8111801561041d57600080fd5b506040519080825280601f01601f191660200182016040528015610448576020820181803683370190505b5080519091505b80156104b1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061047757fe5b1a60f81b82600183038151811061048a57fe5b60200101906001600160f81b031916908160001a90535060049490941c936000190161044f565b509392505050565b6103fb8282604051602401808060200180602001838103835285818151815260200191508051906020019080838360005b838110156105025781810151838201526020016104ea565b50505050905090810190601f16801561052f5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561056257818101518382015260200161054a565b50505050905090810190601f16801561058f5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905294506107739350505050565b606060008260020260020167ffffffffffffffff811180156105e757600080fd5b506040519080825280601f01601f191660200182016040528015610612576020820181803683370190505b509050600360fc1b8160008151811061062757fe5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061065057fe5b60200101906001600160f81b031916908160001a905350600160028402015b60018111156106d1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061069a57fe5b1a60f81b8282815181106106aa57fe5b60200101906001600160f81b031916908160001a90535060049490941c936000190161066f565b5083156100f3576040805162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015290519081900360640190fd5b606061073082610794565b610739836107b9565b61074b846000015185604001516107d4565b60405160200161075d93929190610e84565b6040516020818303038152906040529050919050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b606061079f82610820565b6107a8836108af565b60405160200161075d929190610ed8565b60606107c482610926565b60405160200161075d9190611371565b60606107e08383610345565b1561080a576040516020016107f4906118c7565b60405160208183030381529060405290506100f6565b5060408051602081019091526000815292915050565b606060008260a001518360c0015160405160200161083f92919061187c565b604051602081830303815290604052905060008360c001518460a0015160405160200161086d92919061187c565b60405160208183030381529060405290508360a00151828260405160200161089793929190611129565b60405160208183030381529060405292505050919050565b606060008260a001518360c001516040516020016108ce92919061187c565b604051602081830303815290604052905060008360c001518460a001516040516020016108fc92919061187c565b60405160208183030381529060405290508360c00151818360405160200161089793929190610ffd565b6060816080015161093a8360200151610957565b835161094590610957565b60405160200161075d93929190611240565b60608161097c57506040805180820190915260018152600360fc1b602082015261010a565b8160005b811561099457600101600a82049150610980565b60008167ffffffffffffffff811180156109ad57600080fd5b506040519080825280601f01601f1916602001820160405280156109d8576020820181803683370190505b50859350905060001982015b8315610a2957600a840660300160f81b82828060019003935081518110610a0757fe5b60200101906001600160f81b031916908160001a905350600a840493506109e4565b50949350505050565b80356001600160a01b038116811461010a57600080fd5b600082601f830112610a59578081fd5b8135610a6c610a6782611a21565b6119fd565b818152846020838601011115610a80578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610aab578081fd5b6100f382610a32565b60008060408385031215610ac6578081fd5b610acf83610a32565b946020939093013593505050565b600060208284031215610aee578081fd5b815167ffffffffffffffff811115610b04578182fd5b8201601f81018413610b14578182fd5b8051610b22610a6782611a21565b818152856020838501011115610b36578384fd5b610b47826020830160208601611a8f565b95945050505050565b600060208284031215610b61578081fd5b813567ffffffffffffffff811115610b77578182fd5b820160a081850312156100f3578182fd5b600060208284031215610b99578081fd5b813567ffffffffffffffff80821115610bb0578283fd5b9083019060a08286031215610bc3578283fd5b610bcd60a06119fd565b8235815260208301356020820152604083013582811115610bec578485fd5b610bf887828601610a49565b604083015250606083013582811115610c0f578485fd5b610c1b87828601610a49565b606083015250608083013582811115610c32578485fd5b610c3e87828601610a49565b60808301525095945050505050565b60008060408385031215610c5f578182fd5b82359150602083013567ffffffffffffffff811115610c7c578182fd5b610c8885828601610a49565b9150509250929050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b7f2220626567696e3d2261312e656e6422206475723d22337322202f3e3c2f737481526237b81f60e91b602082015260230190565b7f2220626567696e3d2261332e656e6422206475723d22337322202f3e3c2f737481526237b81f60e91b602082015260230190565b7f3c7265637420783d22302220793d2230222077696474683d223531322220686581527f696768743d22353132222072783d223236222072793d223236222066696c6c3d60208201527f227267626128302c302c302c302922207374726f6b653d22726762612832353560408201527516191a9a96191a9a9618171a94911f1e17b932b1ba1f60511b606082015260760190565b7f3c7265637420783d2231362220793d223136222077696474683d22343830222081527f6865696768743d22343830222072783d223136222072793d223136222066696c60208201527f6c3d227267626128302c302c302c302922207374726f6b653d2272676261283260408201527f35352c3235352c3235352c302e3529223e3c2f726563743e0000000000000000606082015260780190565b60008351610e67818460208801611a8f565b835190830190610e7b818360208801611a8f565b01949350505050565b60008451610e96818460208901611a8f565b845190830190610eaa818360208901611a8f565b8451910190610ebd818360208801611a8f565b651e17b9bb339f60d11b910190815260060195945050505050565b60007f3c7376672077696474683d2235313222206865696768743d223531322220766982527f6577426f783d223020302035313220353132222066696c6c3d226e6f6e65222060208301527f786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737660408301526233911f60e91b6060830152651e3232b3399f60d11b60638301527f3c6c696e6561724772616469656e742069643d226731222078313d22302522206069830152693c989e911a981291101f60b11b60898301528351610fb0816093850160208801611a8f565b835190830190610fc7816093840160208801611a8f565b7f3c2f6c696e6561724772616469656e743e3c2f646566733e00000000000000006093929091019182015260ab01949350505050565b60007f3c73746f70206f66667365743d2231303025222073746f702d636f6c6f723d228252602360f81b6020830152845161103f816021850160208901611a8f565b6211101f60e91b6021918401918201527f3c616e696d6174652069643d22613322206174747269627574654e616d653d2260248201527339ba37b816b1b7b637b911103b30b63ab2b99e9160611b6044820181905285516110a7816058850160208a01611a8f565b7f2220626567696e3d22303b2061342e656e6422206475723d22337322202f3e00605893909101928301527f3c616e696d6174652069643d22613422206174747269627574654e616d653d226077830152609782015283516111108160ab840160208801611a8f565b61111e60ab82840101610cf1565b979650505050505050565b60007f3c73746f70206f66667365743d223025222073746f702d636f6c6f723d2223008252845161116181601f850160208901611a8f565b6211101f60e91b601f918401918201527f3c616e696d6174652069643d22613122206174747269627574654e616d653d2260228201527339ba37b816b1b7b637b911103b30b63ab2b99e9160611b6042820181905285516111c9816056850160208a01611a8f565b7f2220626567696e3d22303b2061322e656e6422206475723d22337322202f3e00605693909101928301527f3c616e696d6174652069643d22613222206174747269627574654e616d653d226075830152609582015283516112328160a9840160208801611a8f565b61111e60a982840101610cbc565b60007f3c672066696c6c3d2277686974652220666f6e742d66616d696c793d22436f7582527f72696572204e65772c206d6f6e6f7370616365223e3c7465787420666f6e742d60208301527f73697a653d2233362220783d2233302220793d223630223e0000000000000000604083015284516112c4816058850160208901611a8f565b7f3c2f746578743e3c7465787420783d2233302220793d22343430223e426c6f63605891840191820152636b3a202360e01b6078820152845161130e81607c840160208901611a8f565b7f3c2f746578743e3c7465787420783d2233302220793d22343730223e49443a20607c9290910191820152835161134c81609c840160208801611a8f565b6a1e17ba32bc3a1f1e17b39f60a91b609c929091019182015260a70195945050505050565b60007f3c726563742069643d22722220783d22302220793d2230222072783d2232362282527f2072793d223236222077696474683d2235313222206865696768743d2235313260208301527311103334b6361e913ab9361411b398949110179f60611b604083015282516113ec816054850160208701611a8f565b7f3c672066696c6c3d227267626128302c302c302c302e362922207374796c653d6054918401918201527f227472616e73666f726d3a207472616e736c617465283333252c333325293b226074820152601f60f91b60948201527f3c7061746820786d6c6e733d22687474703a2f2f7777772e77332e6f72672f3260958201527f3030302f737667222069643d2253686170652220643d224d3230312e31372c3660b58201527f306133382e38312c33382e38312c302c302c302d33382e38342c33382e37317660d58201527f34322e3932632d342c2e32372d382e30392e34342d31322e33332c302e34347360f58201527f2d382e33312e31372d31322e33332c302e34315639382e37316133382e38342c6101158201527f33382e38342c302c302c302d37372e36372c30563230312e32396133382e38346101358201527f2c33382e38342c302c302c302c37372e36372c30563135382e333763342d2e326101558201527f372c382e30392d302e34342c31322e33332d302e343473382e33312d2e31372c6101758201527f31322e33332d302e34317634332e37376133382e38342c33382e38342c302c306101958201527f2c302c37372e36372c305639382e37314133382e38312c33382e38312c302c306101b58201527f2c302c3230312e31372c36305a4d39382e38332c37352e38366132322e39312c6101d58201527f32322e39312c302c302c312c32322e39322c32322e38357634352e34356131336101f58201527f302e36342c3133302e36342c302c302c302d33332c392e33332c36302c36302c6102158201527f302c302c302d31322e382c372e36345639382e37314132322e39312c32322e396102358201527f312c302c302c312c39382e38332c37352e38365a6d32322e39322c3132352e346102558201527f336132322e39322c32322e39322c302c312c312d34352e38342c3056313931636102758201527f302d392e30392c372e322d31372e372c31392e32372d32332e3036613131332c6102958201527f3131332c302c302c312c32362e35372d372e37377634312e31325a6d37392e346102b58201527f322c32322e38356132322e39312c32322e39312c302c302c312d32322e39322d6102d58201527f32322e3835563135352e3834613133302e36342c3133302e36342c302c302c306102f58201527f2c33332d392e33332c36302c36302c302c302c302c31322e382d372e363476366103158201527f322e34324132322e39312c32322e39312c302c302c312c3230312e31372c32326103358201527f342e31345a4d3230342e38322c313332613131332c3131332c302c302c312d326103558201527f362e35372c372e37375639382e37316132322e39322c32322e39322c302c312c6103758201527f312c34352e38342c3056313039433232342e30392c3131382e30352c3231362e6103958201527f38392c3132362e36362c3230342e38322c3133325a22207472616e73666f726d6103b58201527f3d227472616e736c617465282d3630202d363029222f3e3c2f673e00000000006103d582015261187461186f6103f08301610dba565b610d26565b949350505050565b6000602360f81b82528351611898816001850160208801611a8f565b623b202360e81b60019184019182015283516118bb816004840160208801611a8f565b01600401949350505050565b7f3c7265637420783d2231362220793d223136222077696474683d22323538222081527f6865696768743d22343638222072783d223236222072793d223236222066696c60208201526b361e91313630b1b59110179f60a11b6040820152604c0190565b901515815260200190565b6000602082528251806020840152611955816040850160208701611a8f565b601f01601f19169190910160400192915050565b600060208252823560208301526020830135604083015261198d6040840184611a43565b60a060608501526119a260c085018284610c92565b9150506119b26060850185611a43565b601f19808685030160808701526119ca848385610c92565b93506119d96080880188611a43565b93509150808685030160a0870152506119f3838383610c92565b9695505050505050565b60405181810167ffffffffffffffff81118282101715611a1957fe5b604052919050565b600067ffffffffffffffff821115611a3557fe5b50601f01601f191660200190565b6000808335601e19843603018112611a59578283fd5b830160208101925035905067ffffffffffffffff811115611a7957600080fd5b803603831315611a8857600080fd5b9250929050565b60005b83811015611aaa578181015183820152602001611a92565b83811115611ab9576000848401525b5050505056fea2646970667358221220d669544f7cf0bbc4d9a14834f9bfd027f1cad0da8e752af567c408a69b2ddc1164736f6c63430007060033";

export class NFTDescriptorTest__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: NFTDescriptorTestLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      NFTDescriptorTest__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: NFTDescriptorTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2759669c60850940da18034c6fe7a7457b\\$__", "g"),
      linkLibraryAddresses["contracts/GenerativeNFT.sol:NFTDescriptor"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTDescriptorTest> {
    return super.deploy(overrides || {}) as Promise<NFTDescriptorTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTDescriptorTest {
    return super.attach(address) as NFTDescriptorTest;
  }
  connect(signer: Signer): NFTDescriptorTest__factory {
    return super.connect(signer) as NFTDescriptorTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDescriptorTestInterface {
    return new utils.Interface(_abi) as NFTDescriptorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDescriptorTest {
    return new Contract(address, _abi, signerOrProvider) as NFTDescriptorTest;
  }
}

export interface NFTDescriptorTestLibraryAddresses {
  ["contracts/GenerativeNFT.sol:NFTDescriptor"]: string;
}
